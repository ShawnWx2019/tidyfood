arrange(value) %>% filter(str_detect(sample,"QC")) %>%
filter(variable_id == 'C_7630')
View(xx3)
xx =
res_svr_norm %>%
filter(rowSums(. < 0) > 0) %>% rownames_to_column("variable_id") %>%
pivot_longer(!variable_id,names_to = "sample",values_to = 'value') %>%
arrange(value) %>% filter(str_detect(sample,"QC")) %>%
filter(variable_id == 'C_7610')
View(xx)
xx3 = object_neg_impute %>% extract_expression_data() %>% rownames_to_column("variable_id") %>%
pivot_longer(!variable_id,names_to = "sample",values_to = 'value') %>%
arrange(value) %>% filter(str_detect(sample,"QC")) %>%
filter(variable_id == 'C_7610')
View(xx3)
xx =
res_svr_norm %>%
filter(rowSums(. < 0) > 0) %>% rownames_to_column("variable_id") %>%
pull(variable_id) %>% distinct()
xx =
res_svr_norm %>%
filter(rowSums(. < 0) > 0) %>% rownames_to_column("variable_id") %>%
pull(variable_id) %>% unique()
xx
load("/Volumes/ShawnWang/ZCY-test/Result/NEG/Objects/step1/object_neg_mv.rda")
xx3 = object_neg_mv %>% extract_expression_data() %>% rownames_to_column("variable_id") %>%
pivot_longer(!variable_id,names_to = "sample",values_to = 'value') %>%
arrange(value) %>% filter(str_detect(sample,"QC")) %>%
filter(variable_id == 'C_7610')
xx3
xx3 = object_neg_mv %>% extract_expression_data() %>% rownames_to_column("variable_id") %>%
pivot_longer(!variable_id,names_to = "sample",values_to = 'value') %>%
arrange(value) %>% filter(str_detect(sample,"QC")) %>%
filter(variable_id == 'C_7630')
xx3
xx3 %>% pull(value)
xx4 = object_neg_mv %>% extract_expression_data() %>% rownames_to_column("variable_id") %>%
pivot_longer(!variable_id,names_to = "sample",values_to = 'value') %>%
arrange(value) %>% filter(str_detect(sample,"QC")) %>%
filter(variable_id == 'C_7610')
xx4 %>% pull(value)
xx3 %>% pull(value) %>% boxplot()
xx3 %>% pull(value) %>% fivenum()
xx4 %>% pull(value) %>% fivenum()
object_neg_mv %>%
extract_annotation_table() %>%
select("QC")
object_neg_mv %>%
extract_annotation_table() %>%
select(contains("QC"))
object_neg_mv %>%
extract_expression_data() %>%
select(contains("QC"))
object_neg_mv %>%
extract_expression_data() %>%
dplyr::select(contains("QC"))
xx =
object_neg_mv %>%
extract_expression_data() %>%
dplyr::select(contains("QC")) %>%
rowwise() %>%
mutate(mean = mean(c_across(everything())))
xx =
object_neg_mv %>%
extract_expression_data() %>%
dplyr::select(contains("QC")) %>%
rowwise() %>%
mutate(mean = mean(c_across(everything()),na.rm = T),
sd = sd(c_across(everything()),na.rm = T))
xx =
object_neg_mv %>%
extract_expression_data() %>%
dplyr::select(contains("QC")) %>%
rowwise() %>%
mutate(mean = mean(c_across(everything()),na.rm = T),
sd = sd(c_across(everything()),na.rm = T)) %>%
dplyr::select(mean,sd) %>%
mutate(rsd = (sd / mean) * 100)
xx
xx =
object_neg_mv %>%
extract_expression_data() %>%
dplyr::select(contains("QC")) %>%
rownames_to_column('variable_id') %>%
rowwise() %>%
mutate(mean = mean(c_across(!variable_id),na.rm = T),
sd = sd(c_across(!variable_id),na.rm = T)) %>%
dplyr::select(mean,sd) %>%
mutate(rsd = (sd / mean) * 100) %>%
arrange(rsd)
xx
xx =
object_neg_mv %>%
extract_expression_data() %>%
dplyr::select(contains("QC")) %>%
rownames_to_column('variable_id') %>%
rowwise() %>%
mutate(mean = mean(c_across(!variable_id),na.rm = T),
sd = sd(c_across(!variable_id),na.rm = T)) %>%
dplyr::select(variable_id,mean,sd) %>%
mutate(rsd = (sd / mean) * 100) %>%
arrange(rsd)
xx
xx =
object_neg_mv %>%
extract_expression_data() %>%
dplyr::select(contains("QC")) %>%
rownames_to_column('variable_id') %>%
rowwise() %>%
mutate(mean = mean(c_across(!variable_id),na.rm = T),
sd = sd(c_across(!variable_id),na.rm = T)) %>%
dplyr::select(variable_id,mean,sd) %>%
mutate(rsd = (sd / mean) * 100) %>%
arrange(desc(rsd))
xx
xx
xx_rsd =
object_neg_mv %>%
extract_expression_data() %>%
dplyr::select(contains("QC")) %>%
rownames_to_column('variable_id') %>%
rowwise() %>%
mutate(mean = mean(c_across(!variable_id),na.rm = T),
sd = sd(c_across(!variable_id),na.rm = T)) %>%
dplyr::select(variable_id,mean,sd) %>%
mutate(rsd = (sd / mean) * 100) %>%
arrange(desc(rsd))
xx_rsd
xx_neg =
res_svr_norm %>%
filter(rowSums(. < 0) > 0) %>% rownames_to_column("variable_id") %>%
pull(variable_id) %>% unique()
xx_neg
xx_neg =
res_svr_norm2 %>%
filter(rowSums(. < 0) > 0) %>% rownames_to_column("variable_id") %>%
pull(variable_id) %>% unique()
xx_neg
xx_rsd =
object_neg_mv %>%
extract_expression_data() %>%
dplyr::select(contains("QC")) %>%
rownames_to_column('variable_id') %>%
rowwise() %>%
mutate(mean = mean(c_across(!variable_id),na.rm = T),
sd = sd(c_across(!variable_id),na.rm = T)) %>%
dplyr::select(variable_id,mean,sd) %>%
mutate(rsd = (sd / mean) * 100) %>%
arrange(desc(sd))
xx_neg
xx_rsd
xx_rsd =
object_neg_mv %>%
extract_expression_data() %>%
dplyr::select(contains("QC")) %>%
rownames_to_column('variable_id') %>%
rowwise() %>%
mutate(mean = mean(c_across(!variable_id),na.rm = T),
sd = sd(c_across(!variable_id),na.rm = T)) %>%
dplyr::select(variable_id,mean,sd) %>%
mutate(rsd = (sd / mean) * 100) %>%
arrange(desc(rsd))
xx_rsd
data.frame(
variable_id = xx_neg
) %>% left_join(xx_rsd)
xx3 = object_neg_mv %>% extract_expression_data() %>% rownames_to_column("variable_id") %>%
pivot_longer(!variable_id,names_to = "sample",values_to = 'value') %>%
arrange(value) %>% filter(str_detect(sample,"QC")) %>%
filter(vtariable_id == 'C_7630')
xx3 = object_neg_mv %>% extract_expression_data() %>% rownames_to_column("variable_id") %>%
pivot_longer(!variable_id,names_to = "sample",values_to = 'value') %>%
arrange(value) %>% filter(str_detect(sample,"QC")) %>%
filter(variable_id == 'C_7630')
xx3 = object_neg_norm %>% extract_expression_data() %>% rownames_to_column("variable_id") %>%
pivot_longer(!variable_id,names_to = "sample",values_to = 'value') %>%
arrange(value) %>% filter(str_detect(sample,"QC")) %>%
filter(variable_id == 'C_7630')
xx3 = object_neg_svr %>% extract_expression_data() %>% rownames_to_column("variable_id") %>%
pivot_longer(!variable_id,names_to = "sample",values_to = 'value') %>%
arrange(value) %>% filter(str_detect(sample,"QC")) %>%
filter(variable_id == 'C_7630')
xx3
object_neg_svr %>% extract_process_info()
devtools::document()
run_tidyfood_shiny()
library(tidyfood)
run_tidyfood_shiny()
devtools::document()
library(tidyfood)
devtools::document()
library(tidyfood)
library(tidyfood)
run_tidyfood_shiny()
devtools::document()
library(tidyfood)
library(tidyfood)
run_tidyfood_shiny()
devtools::document()
run_tidyfood_shiny()
library(tidyfood)
run_tidyfood_shiny()
run_tidyfood_shiny()
library(bslib)
library(tidyfood)
run_tidyfood_shiny()
run_tidyfood_shiny()
devtools::document()
devtools::document()
library(tidyfood)
run_tidyfood_shiny()
project_init_ui <- function(id) {
ns <- NS(id)
navset_card_tab(
title = 'Initialize project',
icon = bs_icon("airplane"),
sidebar = accordion(
accordion_panel(
"Working directory", icon = bsicons::bs_icon("menu-app"),
shinyDirButton(id = ns("prj_wd"),
label = "Set working directory" ,
title = "Set working directory:",
buttonType = "default", class = NULL,
icon = bsicons::bs_icon("folder"), multiple = FALSE),
tags$span(textOutput(outputId = ns("raw_wd_path")), class = "text-wrap"),
fileInput(
inputId = ns('SampleInfo'),
label = 'Sample Information',
multiple = FALSE,
accept = '.csv'
),
p('Make sure your file structure is consistent with the following image',style = "color: #7a8788;font-size: 12px; font-style:Italic"),
img(src = "https://shawnmagic-1257599720.cos.ap-chengdu.myqcloud.com/picgo20240319180805.png",width = "100%"),
selectInput(
inputId = ns("sample_id_raw"),label = "sample id",choices = c("sample_id",'injection.order',"class","group"),
selected = "sample_id",multiple = FALSE
),
selectInput(
inputId = ns("injection.order_raw"),label = "injection order",choices = c("sample_id",'injection.order',"class","group"),
selected = "injection.order",multiple = FALSE
),
selectInput(
inputId = ns("class_raw"),label = "class",choices = c("sample_id",'injection.order',"class","group","batch"),
selected = "class",multiple = FALSE
),
selectInput(
inputId = ns("group_raw"),label = "group",choices = c("sample_id",'injection.order',"class","group","batch"),
selected = "group",multiple = FALSE
),
selectInput(
inputId = ns("batch_raw"),label = "batch",choices = c("sample_id",'injection.order',"class","group","batch"),
selected = "batch",multiple = FALSE
)
),
accordion_panel(
"Resuming task", icon = bsicons::bs_icon("repeat"),
selectInput_div(
inputId = ns("init_steps"),label = "Choose steps",
choices = c("Remove noisey feature","Remove outlier","impute missing value","Normalization","Annotation","Annotation filtering","Data integrate","DAM and rest"),
selected = NULL,multiple = F,
title = "Choose steps"
),
shinyFilesButton(
id = ns('saved_obj_pos'),buttonType = "default",title = "load mass dataset object (positive) ",
label = 'Positive object',
class = NULL,
icon = bsicons::bs_icon("database"), multiple = FALSE
),
tags$span(textOutput(outputId = ns("saved_obj_pos")), class = "text-wrap"),
p('Make sure your input .rda file is AUTO saved file by THIS SHINY APP.',style = "color: #7a8788;font-size: 12px; font-style:Italic") ,
shinyFilesButton(
id = ns('saved_obj_neg'),buttonType = "default",title = "load mass dataset object (positive) ",
label = 'Negative object',
class = NULL,
icon = bsicons::bs_icon("database"), multiple = FALSE
),
tags$span(textOutput(outputId = ns("saved_obj_neg")),  class = "text-wrap"),
p('Make sure your input .rda file is AUTO saved file by THIS SHINY APP.',style = "color: #7a8788;font-size: 12px; font-style:Italic"),
shinyFilesButton(
id = ns('init_dblist'),buttonType = "default",title = "load saved database list file (option) ",
label = 'load database file ',
class = NULL,
icon = bsicons::bs_icon("folder"), multiple = FALSE
),
tags$span(textOutput(outputId = ns("init_dblist")),  class = "text-wrap"),
p('Make sure your input .rda file is AUTO saved file by Annotation step, only needed in re-analysis annotation filtering step.',style = "color: #7a8788;font-size: 12px; font-style:Italic"),
)
),
nav_panel(
title = "Setting working directory",icon = bsicons::bs_icon("power"),
card(
full_screen = T,
height = 300,
card_header(
"File check"
),
card_body(
actionButton(inputId = ns('action_init'),'Initialize project',icon = bsicons::bs_icon("play"), style = "width: 200px;")
),
htmlOutput(outputId = ns("file_check_init")),
card_body(
fill = FALSE, gap = 0,
card_title("Attention!",style = "color: orange;"),
p(class = "text-muted", "Please ensure that the file check results are correct before proceeding with further analysis.")
)
),
card(
full_screen = T,
height = 350,
card_header(
"Sample information"
),
DT::dataTableOutput(ns("tbl_sample_info"))
)
),
nav_panel(
title = "Resuming analysis from the unfinished steps",
icon = bsicons::bs_icon("repeat"),
card(
full_screen = T,
height = 350,
card_header(
"Positive model"
),
verbatimTextOutput(ns("res_pos_mod"))
),
card(
full_screen = T,
height = 350,
card_header(
"Negative model"
),
verbatimTextOutput(ns("res_neg_mod"))
)
)
)
}
devtools::document()
library(tidyfood)
run_tidyfood_shiny()
devtools::document()
library(tidyfood)
run_tidyfood_shiny()
library(tidyfood)
devtools::document()
library(tidyfood)
run_tidyfood_shiny()
run_tidyfood_shiny()
devtools::document()
library(tidyfood)
run_tidyfood_shiny()
devtools::document()
library(tidyfood)
run_tidyfood_shiny()
run_tidyfood_shiny()
install.packages("shinytest")
shinytest::recordTest()
# Create an app.R file at the root of the package
golem::add_rstudioconnect_file()
# Launch a test, and record a series of
# snapshots of your application
shinytest::recordTest()
# Create an app.R file at the root of the package
golem::add_rstudioconnect_file()
# Launch a test, and record a series of
# snapshots of your application
shinytest::recordTest()
rlang::last_trace()
# Create an app.R file at the root of the package
golem::add_rstudioconnect_file()
# Launch a test, and record a series of
# snapshots of your application
shinytest::recordTest()
rlang::last_trace()
shinytest::recordTest()
shinytest::installDependencies()
shinytest::installDependencies()
shinytest::recordTest()
shinytest::testApp()
shinytest::recordTest()
rlang::last_trace()
devtools::document()
library(tidyfood)
devtools::document()
rlang::last_trace()
run_tidyfood_shiny()
devtools::document()
library(tidyfood)
run_tidyfood_shiny()
library(tidyfood)
run_tidyfood_shiny()
library(tidyverse)
library(tidymass)
library(tidyfood)
run_tidyfood_shiny()
devtools::document()
library(tidyfood)
library(tidyfood)
library(tidyverse)
library(tidymass)
library(MDAtoolkits)
run_tidyfood_shiny()
devtools::document()
devtools::document()
library(tidyfood)
run_tidyfood_shiny()
devtools::document()
library(tidyfood)
run_tidyfood_shiny()
devtools::document()
library(tidyfood)
run_tidyfood_shiny()
run_tidyfood_shiny()
devtools::document()
devtools::document()
library(tidyfood)
run_tidyfood_shiny()
devtools::document()
library(tidyfood)
run_tidyfood_shiny()
devtools::document()
library(tidyfood)
run_tidyfood_shiny()
load("/Volumes/TOSHIBA/01.Demo/Result/NEG/Objects/step1/object_neg_raw.rda")
object_neg_raw@sample_info_note
object_neg_raw@variable_info_note
library(MDAtoolkits)
library(tidymass)
object_neg_raw_mona <-
object_neg_raw %>%
annotate_metabolites_mass_dataset(
ms1.match.ppm = 10,
ms2.match.ppm = 30,
polarity = "negative",
threads = 6,
database = mona_database0.0.4
)
ms2_match_only = object_neg_raw@ms2_data$`QC_01.mgf;QC_02.mgf;QC_03.mgf;QC_04.mgf;QC_05.mgf;QC_06.mgf;S_01.mgf;S_02.mgf;S_03.mgf;S_04.mgf`@variable_id
ms2_match_only
object_neg_raw_ms2_only <-
object_neg_raw %>%
activate_mass_dataset('variable_id') %>%
left_join(
data.frame(
variable_id = ms2_match_only,
tag = "keep"
)
) %>%
dplyr::filter(tag == "keep")
object_neg_raw_ms2_only <-
object_neg_raw %>%
activate_mass_dataset('variable_info') %>%
left_join(
data.frame(
variable_id = ms2_match_only,
tag = "keep"
)
) %>%
dplyr::filter(tag == "keep")
object_neg_ms2_only_mona <-
object_neg_raw_ms2_only %>%
annotate_metabolites_mass_dataset(
ms1.match.ppm = 10,
ms2.match.ppm = 30,
polarity = "negative",
threads = 6,
database = mona_database0.0.4
)
setdiff(
object_neg_raw_mona %>% extract_annotation_table() %>% pull(variable_id) %>% unique(),
object_neg_ms2_only_mona %>% extract_annotation_table() %>% pull(variable_id) %>% unique()
)
object_neg_raw_mona %>% extract_annotation_table() %>% pull(variable_id) %>% unique()
object_neg_ms2_only_mona %>% extract_annotation_table() %>% pull(variable_id) %>% unique()
object_neg_ms2_only_mona
object_neg_raw_mona
object_neg_raw_mona %>% extract_annotation_table()
object_neg_raw_mona %>% extract_annotation_table() %>% nrow()
object_neg_ms2_only_mona %>% extract_annotation_table() %>% norm()
object_neg_ms2_only_mona %>% extract_annotation_table()
object_neg_ms2_only_mona %>% extract_annotation_table() %>% norm()
object_neg_raw_mona %>% extract_annotation_table() %>% nrow()
object_neg_ms2_only_mona
object_neg_ms2_only_mona %>% extract_annotation_table()
object_neg_raw_mona %>% extract_annotation_table() %>% nrow()
object_neg_ms2_only_mona %>% extract_annotation_table() %>% norm()
object_neg_ms2_only_mona
object_neg_ms2_only_mona
object_neg_raw_mona
library(tidyfood)
run_tidyfood_shiny()
devtools::document()
library(tidyfood)
run_tidyfood_shiny()
devtools::document()
library(tidyfood)
run_tidyfood_shiny()
devtools::document()
library(tidyfood)
run_tidyfood_shiny()
devtools::document()
library(tidyfood)
run_tidyfood_shiny()
devtools::document()
library(tidyfood)
run_tidyfood_shiny()
devtools::document()
library(tidyfood)
devtools::document()
library(tidyfood)
run_tidyfood_shiny()
run_tidyfood_shiny()
